<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="2.56" errors="1" skipped="0" tests="5" name="com.example.shdemo.service.TrumnaManagerTest">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/opt/devel/jdk1.7.0_40/jre/lib/i386"/>
    <property name="java.vm.version" value="24.0-b56"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="PL"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/student/git/shdemo"/>
    <property name="java.runtime.version" value="1.7.0_40-b43"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/opt/devel/jdk1.7.0_40/jre/lib/endorsed"/>
    <property name="os.arch" value="i386"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/opt/devel/apache-maven-3.1.0/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/i386:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot Tiered Compilers"/>
    <property name="os.version" value="3.8.0-31-generic"/>
    <property name="user.home" value="/home/student"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="user.name" value="student"/>
    <property name="java.class.path" value="/opt/devel/apache-maven-3.1.0/boot/plexus-classworlds-2.4.2.jar"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="info"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="32"/>
    <property name="java.home" value="/opt/devel/jdk1.7.0_40/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="pl"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_40"/>
    <property name="java.ext.dirs" value="/opt/devel/jdk1.7.0_40/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/opt/devel/jdk1.7.0_40/jre/lib/resources.jar:/opt/devel/jdk1.7.0_40/jre/lib/rt.jar:/opt/devel/jdk1.7.0_40/jre/lib/sunrsasign.jar:/opt/devel/jdk1.7.0_40/jre/lib/jsse.jar:/opt/devel/jdk1.7.0_40/jre/lib/jce.jar:/opt/devel/jdk1.7.0_40/jre/lib/charsets.jar:/opt/devel/jdk1.7.0_40/jre/lib/jfr.jar:/opt/devel/jdk1.7.0_40/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/devel/apache-maven-3.1.0"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="2.349" classname="com.example.shdemo.service.TrumnaManagerTest" name="createTrumna"/>
  <testcase time="0.082" classname="com.example.shdemo.service.TrumnaManagerTest" name="readTrumna"/>
  <testcase time="0.066" classname="com.example.shdemo.service.TrumnaManagerTest" name="deleteTrumna"/>
  <testcase time="0.039" classname="com.example.shdemo.service.TrumnaManagerTest" name="updateTrumna">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at com.example.shdemo.service.TrumnaManagerTest.updateTrumna(TrumnaManagerTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>Hibernate: insert into Trumna (id, gatunek_drewna, nazwa) values (default, ?, ?)
Hibernate: insert into Trumna (id, gatunek_drewna, nazwa) values (default, ?, ?)
Hibernate: insert into Trumna (id, gatunek_drewna, nazwa) values (default, ?, ?)
Hibernate: select trumna0_.id as id0_0_, trumna0_.gatunek_drewna as gatunek2_0_0_, trumna0_.nazwa as nazwa0_0_ from Trumna trumna0_ where trumna0_.id=?
</system-out>
  </testcase>
  <testcase time="0.024" classname="com.example.shdemo.service.TrumnaManagerTest" name="getId"/>
</testsuite>